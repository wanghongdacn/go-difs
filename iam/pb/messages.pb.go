// Code generated by protoc-gen-go.
// source: messages.proto
// DO NOT EDIT!

/*
Package iam_pb is a generated protocol buffer package.

It is generated from these files:
	messages.proto

It has these top-level messages:
	MessageCSR
	MessageCOT
	MessageCRT
	MessageCAT
	MessageRT
	SignedMessage
*/
package iam_pb

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

// MessageType ...
type MessageType int32

const (
	MessageType_MessageType_Initialize MessageType = 0
	MessageType_MessageType_MessageCSR MessageType = 1
	MessageType_MessageType_MessageCOT MessageType = 2
)

var MessageType_name = map[int32]string{
	0: "MessageType_Initialize",
	1: "MessageType_MessageCSR",
	2: "MessageType_MessageCOT",
}
var MessageType_value = map[string]int32{
	"MessageType_Initialize": 0,
	"MessageType_MessageCSR": 1,
	"MessageType_MessageCOT": 2,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}
func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}

// Request CSR , owner send to storage
type MessageCSR struct {
	OId              []byte `protobuf:"bytes,1,req,name=o_id" json:"o_id,omitempty"`
	Cid              []byte `protobuf:"bytes,2,req,name=cid" json:"cid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MessageCSR) Reset()         { *m = MessageCSR{} }
func (m *MessageCSR) String() string { return proto.CompactTextString(m) }
func (*MessageCSR) ProtoMessage()    {}

func (m *MessageCSR) GetOId() []byte {
	if m != nil {
		return m.OId
	}
	return nil
}

func (m *MessageCSR) GetCid() []byte {
	if m != nil {
		return m.Cid
	}
	return nil
}

// CSR Response COT , storage response to owner and signed by storage
type MessageCOT struct {
	SId              []byte `protobuf:"bytes,1,req,name=s_id" json:"s_id,omitempty"`
	OId              []byte `protobuf:"bytes,2,req,name=o_id" json:"o_id,omitempty"`
	Cid              []byte `protobuf:"bytes,3,req,name=cid" json:"cid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MessageCOT) Reset()         { *m = MessageCOT{} }
func (m *MessageCOT) String() string { return proto.CompactTextString(m) }
func (*MessageCOT) ProtoMessage()    {}

func (m *MessageCOT) GetSId() []byte {
	if m != nil {
		return m.SId
	}
	return nil
}

func (m *MessageCOT) GetOId() []byte {
	if m != nil {
		return m.OId
	}
	return nil
}

func (m *MessageCOT) GetCid() []byte {
	if m != nil {
		return m.Cid
	}
	return nil
}

// CRT Request Token , request send request to owner ask authorization
type MessageCRT struct {
	RId              []byte `protobuf:"bytes,1,req,name=r_id" json:"r_id,omitempty"`
	OId              []byte `protobuf:"bytes,2,req,name=o_id" json:"o_id,omitempty"`
	Cid              []byte `protobuf:"bytes,3,req,name=cid" json:"cid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MessageCRT) Reset()         { *m = MessageCRT{} }
func (m *MessageCRT) String() string { return proto.CompactTextString(m) }
func (*MessageCRT) ProtoMessage()    {}

func (m *MessageCRT) GetRId() []byte {
	if m != nil {
		return m.RId
	}
	return nil
}

func (m *MessageCRT) GetOId() []byte {
	if m != nil {
		return m.OId
	}
	return nil
}

func (m *MessageCRT) GetCid() []byte {
	if m != nil {
		return m.Cid
	}
	return nil
}

// CRT Response CAT , owner response to requester
type MessageCAT struct {
	OId              []byte `protobuf:"bytes,1,req,name=o_id" json:"o_id,omitempty"`
	RId              []byte `protobuf:"bytes,2,req,name=r_id" json:"r_id,omitempty"`
	Cid              []byte `protobuf:"bytes,3,req,name=cid" json:"cid,omitempty"`
	Cot              []byte `protobuf:"bytes,4,req,name=cot" json:"cot,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MessageCAT) Reset()         { *m = MessageCAT{} }
func (m *MessageCAT) String() string { return proto.CompactTextString(m) }
func (*MessageCAT) ProtoMessage()    {}

func (m *MessageCAT) GetOId() []byte {
	if m != nil {
		return m.OId
	}
	return nil
}

func (m *MessageCAT) GetRId() []byte {
	if m != nil {
		return m.RId
	}
	return nil
}

func (m *MessageCAT) GetCid() []byte {
	if m != nil {
		return m.Cid
	}
	return nil
}

func (m *MessageCAT) GetCot() []byte {
	if m != nil {
		return m.Cot
	}
	return nil
}

//
type MessageRT struct {
	RId              []byte `protobuf:"bytes,1,req,name=r_id" json:"r_id,omitempty"`
	Cid              []byte `protobuf:"bytes,2,req,name=cid" json:"cid,omitempty"`
	Cat              []byte `protobuf:"bytes,3,req,name=cat" json:"cat,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MessageRT) Reset()         { *m = MessageRT{} }
func (m *MessageRT) String() string { return proto.CompactTextString(m) }
func (*MessageRT) ProtoMessage()    {}

func (m *MessageRT) GetRId() []byte {
	if m != nil {
		return m.RId
	}
	return nil
}

func (m *MessageRT) GetCid() []byte {
	if m != nil {
		return m.Cid
	}
	return nil
}

func (m *MessageRT) GetCat() []byte {
	if m != nil {
		return m.Cat
	}
	return nil
}

// SignedMessage ...
type SignedMessage struct {
	Id               *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	PeerId           []byte  `protobuf:"bytes,2,req,name=peer_id" json:"peer_id,omitempty"`
	Message          []byte  `protobuf:"bytes,3,req,name=message" json:"message,omitempty"`
	Signature        []byte  `protobuf:"bytes,4,req,name=signature" json:"signature,omitempty"`
	PublicKey        []byte  `protobuf:"bytes,5,req,name=public_key" json:"public_key,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SignedMessage) Reset()         { *m = SignedMessage{} }
func (m *SignedMessage) String() string { return proto.CompactTextString(m) }
func (*SignedMessage) ProtoMessage()    {}

func (m *SignedMessage) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *SignedMessage) GetPeerId() []byte {
	if m != nil {
		return m.PeerId
	}
	return nil
}

func (m *SignedMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SignedMessage) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *SignedMessage) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func init() {
	proto.RegisterEnum("iam.pb.MessageType", MessageType_name, MessageType_value)
}
